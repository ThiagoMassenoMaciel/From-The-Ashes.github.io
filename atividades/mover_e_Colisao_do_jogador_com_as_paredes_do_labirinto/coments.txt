no exemplo mostrado pelo professor do phaser é usado variavel global dentro do script e fora de qualquer função 
no exemplo que estou fazendo é uma variavel de classe estanciada dentro do create(). pergunto funções fora do create() muda o valor dessa var de classe ?

this.todos_blocos_parede = this.physics.add.staticGroup();

dentro do loop que monta o labirinto adicionar para o grupo so os blocos paredes

    this.todos_blocos_parede.create( coluna * 120 + (config.width/3) - 80  , linha * 120 ,"pareide" ).setOrigin(0,0).setScale(3).refreshBody();

adicionar as bordas para dentro do grupo
    this.todos_blocos_parede.create((config.width/3) - 80 - 10           ,  0              , "borda_left").setOrigin(0,0).refreshBody();
    this.todos_blocos_parede.create( ( 5 * 120 ) + (config.width/3) - 80 ,  0              , "borda_right").setOrigin(0,0).refreshBody();
    this.todos_blocos_parede.create( (config.width/3) - 80               , (5 * 120 )      , "borda_bottom").setOrigin(0,0).refreshBody(); 

adiciona fisica para o sprite saida
    this.saida = this.physics.add.sprite( colunaF * 120 + (config.width/3) - 79.5  , ( linhaF * 120 ) + 0.5,"saidaa").setOrigin(0,0).setScale(0.3)

animar o sprite saida 
    this.saida.anims.play("saidaa_anims", true);

adicionar fisica para o sprite jogador e sua colisão de cima 
    this.jogadorr = this.physics.add.sprite(colunaI * 120 + (config.width/3) - 79.5  ,  (linhaI * 120 ) + 0.5,"jogador").setOrigin(0,0).setScale(0.3);
    this.jogadorr.setCollideWorldBounds(true);

animar o sprite do jogador 
    this.jogadorr.anims.play("jogador_anims", true);

adicionar colisão do jogador com o todos_blocos_parede 
    this.physics.add.collider(this.jogadorr, this.todos_blocos_parede);

estanciar a variavel de eventos da tecla dentro do create 
    this.cursors = this.input.keyboard.createCursorKeys();

lógica dentro da função update() para mover jogador usando variavel estanciada no create()

    if (this.cursors.left.isDown) {
       this.jogadorr.setVelocityX(-700);
    }else if (this.cursors.right.isDown) {
       this.jogadorr.setVelocityX(700);
    }else{
      this.jogadorr.setVelocityX(0)
    }
    
    if (this.cursors.up.isDown) {
      this.jogadorr.setVelocityY(-700);
    }else  if( this.cursors.down.isDown){
      this.jogadorr.setVelocityY(700)
    }else{
      this.jogadorr.setVelocityY(0)
    }

o que vai mudar para cada modo de jogo diferente ?
escala dos objetos
posição dos objetos 
setVelocity de cada eixo - talvez maior ou menor 

bug , quando eu executo o arquivo index.html para testar o script que fiz adicionando cada bloco pareide dentro de um grupo fisico estatico aparecia um erro de que não estava conseguindo pegar a scene nova que tinha adicionado na pasta
    solução :::: era para colocar também um script dentro da tag head no index.html do novo scene 

decidi colocar as bordas do limite do labirinto dentro do mesmo grupo fisico estático que os blocos pareide

bug , o jogador n consegue se mover 
    solução :::: tirar os blocos espaço do grupo fisico estatico 

bug, o jogador não esta colidindo com a borda de baixo (acho que como eu estava usando o .setAngle(-90) o refreshbody não atualizava )
    solução :::: mudar imagem de vertical para horizontal e tirar o setAngle(-90) na hora que colocou a borda baixo dentro do grupo fisico estático

bug, eu ainda não sei como fazer com que o jogador se movimente dano passada 120 px a cada vez que clica o botão -> , <- , ^ , v 
    quando a tecla up ou down é clicada apenas uma vez o jogador continua se movendo pos o setVelocity é constante , então quando for fazer um
    passo depois de apertar uma tecla tem que parar o jogador so continuar se clicar de novo

    bug do eixo Y , pois quando clica uma vez continua movimentando o jogador sem pausar

    solução :::: colocar um setVelocity(0) depois de cada passo dado - não funcionou
    solução :::: fazer dois ifs aninhados , um if aninhado para lados vertical , outro if aninhado lados horizontal, e um else que execute setVelocity(0) 
                 quando nos testes aninhados for false, e que seja um else para horizontal e outro para vertical 

                    lógica horizontal 
                    se clicou para esquerda
                        empurrar o jogador para esquerda                      setVelocityEIXO()
                    se clicou para direita
                        empurrar o jogador para direita                       setVelocityEIXO()
                    se não clicou 
                        deixar o jogador parado                               setVelocityEIXO(0)

                    lógica vertical 
                    se clicou para cima
                        empurrar o jogador para cima                      setVelocityEIXO()
                    se clicou para baixo
                        empurrar o jogador para baixo                     setVelocityEIXO()
                    se não clicou 
                        deixar o jogador parado                           setVelocityEIXO(0)